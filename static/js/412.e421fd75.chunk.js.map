{"version":3,"file":"static/js/412.e421fd75.chunk.js","mappings":"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","sources":["components/pages/contacts.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/filter.jsx","components/小ontactsList/ContactListItem .jsx","components/小ontactsList/小ontactsList.jsx","components/pages/小ontacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  border-radius: 20px;\n  background-color: #3b2f63;\n  background-image: radial-gradient(\n      circle at 50% top,\n      rgba(40, 60, 228, 0.6) 0%,\n      rgba(40, 60, 228, 0) 70%\n    ),\n    radial-gradient(circle at right top, #ca1133 0%, rgba(233, 4, 46, 0) 57%);\n  color: #dcd9df;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport React from 'react';\n\nimport * as Yup from 'yup';\nimport 'yup-phone-lite';\n\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { addContact } from 'redux/contacts/operations';\nimport * as selectors from '../../redux/contacts/selectors';\nimport { Formik, Form, Field } from 'formik';\nimport { Box, Button } from '@mui/material';\nimport { TextField } from 'formik-mui';\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\n\nconst SubmitSchema = Yup.object().shape({\n  name: Yup.string().required('Enter contact name'),\n  number: Yup.string().phone('UA').required('Enter phone number'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectors.selectContacts);\n\n  const handleSubmit = newContact => {\n    const { name: newName, number: newNumber } = newContact;\n    if (\n      contacts.find(({ name }) => name === newName) ||\n      contacts.find(({ number }) => number === newNumber)\n    ) {\n      return Notify.failure(\n        `${newName} ${newNumber} is already in contacts.\n        Please choose other name or number.`,\n        {\n          position: 'center-center',\n          timeout: 1500,\n        }\n      );\n    }\n\n    dispatch(addContact(newContact));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SubmitSchema}\n      onSubmit={(values, { resetForm }) => {\n        handleSubmit({\n          ...values,\n        });\n        resetForm();\n      }}\n    >\n      <Form autoComplete=\"off\">\n        <Box marginY={1} sx={{ width: 280 }}>\n          <Field\n            component={TextField}\n            type=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            size=\"small\"\n            color=\"secondary\"\n            fullWidth\n          />\n        </Box>\n        <Box marginY={1} sx={{ width: 280 }}>\n          <Field\n            component={TextField}\n            type=\"tel\"\n            label=\"Number\"\n            name=\"number\"\n            size=\"small\"\n            color=\"secondary\"\n            fullWidth\n          />\n        </Box>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"secondary\"\n          type=\"submit\"\n          fullWidth\n        >\n          <PersonAddAlt1Icon />\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { selectFilterValue } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Box, TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  const handleFilter = evt => dispatch(setFilter(evt.target.value));\n\n  return (\n    <Box\n      component=\"form\"\n      marginY={1}\n      sx={{\n        '& > :not(style)': { m: 1, width: 280 },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        id=\"filled-basic\"\n        label=\"Filter\"\n        variant=\"filled\"\n        color=\"secondary\"\n        size=\"small\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n        fullWidth\n      />\n    </Box>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { removeContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { Box, Button, ListItem, Typography } from '@mui/material';\nimport ClearIcon from '@mui/icons-material/Clear';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = contactId => {\n    dispatch(removeContact(contactId));\n  };\n  const { id, name, number } = contact;\n  return (\n    <ListItem\n      key={id}\n      sx={{\n        pb: 0,\n        paddingX: 0,\n        display: { xs: 'flex' },\n        flexDirection: 'column',\n      }}\n    >\n      <Box\n        component=\"div\"\n        sx={{ display: { xs: 'flex' }, alignItems: 'center', width: '100%' }}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            display: { xs: 'flex' },\n            flexWrap: 'wrap',\n            flexGrow: 1,\n          }}\n        >\n          <Typography variant=\"span\" sx={{ mr: 1, flexGrow: 1 }}>\n            {name}\n          </Typography>\n          <Typography variant=\"span\" sx={{ mr: 1 }}>\n            {number}\n          </Typography>\n        </Box>\n        <Button type=\"button\" onClick={() => handleDelete(contact.id)}>\n          <ClearIcon color=\"secondary\" />\n        </Button>\n      </Box>\n    </ListItem>\n  );\n};\nContactListItem.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { ContactListItem } from './ContactListItem ';\nimport { Box, List } from '@mui/material';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <Box component=\"div\" sx={{ mt: 1, width: '100%', maxWidth: 300 }}>\n      <List>\n        {visibleContacts.map(contact => (\n          <ContactListItem key={contact.id} contact={contact} />\n        ))}\n      </List>\n    </Box>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Container } from './contacts.styled';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/filter';\nimport { ContactList } from 'components/小ontactsList/小ontactsList';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Box, Typography } from '@mui/material';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Box\n        sx={{\n          display: { xs: 'flex' },\n          alignItems: 'center',\n          flexDirection: 'column',\n\n          justifyContent: 'space-between',\n          minWidth: '320px',\n          padding: '20px',\n\n          color: '#dcd9df',\n        }}\n      >\n        <Typography variant=\"h5\" sx={{ p: 1.5 }}>\n          Add new contact\n        </Typography>\n        <ContactForm />\n        <Typography variant=\"h5\" sx={{ p: 1.5 }}>\n          Contacts\n        </Typography>\n        {contacts.length > 0 ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <Typography variant=\"body1\" sx={{ p: 1.5, color: '#cf71e2' }}>\n            No any contacts in phonebook\n          </Typography>\n        )}\n\n        {isLoading && !error && (\n          <Typography variant=\"body1\" sx={{ p: 1.5, color: '#cf71e2' }}>\n            Request in progress...\n          </Typography>\n        )}\n      </Box>\n    </Container>\n  );\n};\nexport default Contacts;\n"],"names":["Container","styled","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","SubmitSchema","Yup","shape","required","number","phone","ContactForm","dispatch","useDispatch","useSelector","selectors","initialValues","validationSchema","onSubmit","values","resetForm","newContact","newName","newNumber","find","Notify","position","timeout","addContact","handleSubmit","autoComplete","Box","marginY","sx","width","component","TextField","type","label","size","color","fullWidth","Button","variant","PersonAddAlt1","Filter","m","noValidate","id","value","onChange","evt","setFilter","target","ContactListItem","contact","ListItem","pb","paddingX","display","xs","flexDirection","alignItems","flexWrap","flexGrow","Typography","mr","onClick","contactId","removeContact","Clear","prototype","PropTypes","ContactList","visibleContacts","mt","maxWidth","List","map","useEffect","fetchContacts","justifyContent","minWidth","padding","p","length"],"sourceRoot":""}