{"version":3,"file":"static/js/614.64cb0f2f.chunk.js","mappings":"yOAKMA,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,KAAaG,SAAS,sBAC5BC,MAAOJ,EAAAA,KAAaK,WAAWD,QAAQD,SAAS,eAChDG,SAAUN,EAAAA,KACPO,IAAI,GACJC,IACC,IAEDL,SAAS,oBAGDM,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CACEC,cAAe,CACbV,KAAM,GACNE,MAAO,GACPE,SAAU,IAEZO,iBAAkBd,EAClBe,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBC,QAAQC,IAAIH,GACZL,GAASS,EAAAA,EAAAA,IAASJ,IAElBC,GACD,EAZH,UAcE,UAAC,KAAD,YACE,yCAEE,SAAC,KAAD,CACEI,KAAK,OACLlB,KAAK,OACLmB,QAAQ,4HAEV,SAAC,KAAD,CAAcC,UAAU,OAAOpB,KAAK,aAGtC,sCAEE,SAAC,KAAD,CAAOA,KAAK,QAAQkB,KAAK,UACzB,SAAC,KAAD,CAAcE,UAAU,OAAOpB,KAAK,cAGtC,yCAEE,SAAC,KAAD,CAAOkB,KAAK,WAAWlB,KAAK,cAC5B,SAAC,KAAD,CAAcoB,UAAU,OAAOpB,KAAK,iBAGtC,mBAAQqB,QAAQ,WAAWH,KAAK,SAAhC,sBAMP,EClDD,EAViB,WACf,OACE,4BAEE,6CAEA,SAACX,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","components/pages/Register.jsx"],"sourcesContent":["import * as Yup from 'yup';\nimport { Field, Form, Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\n\nconst FormikSchema = Yup.object().shape({\n  name: Yup.string().required('Enter contact name'),\n  email: Yup.string().nullable().email().required('Enter email'),\n  password: Yup.string()\n    .min(2 | 'Password must be at least 8 characters long')\n    .max(\n      16 | 'The maximum length of the password must not exceed 16 characters'\n    )\n    .required('Enter password'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={FormikSchema}\n      onSubmit={(values, { resetForm }) => {\n        console.log(values);\n        dispatch(register(values));\n\n        resetForm();\n      }}\n    >\n      <Form>\n        <label>\n          Username\n          <Field\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          />\n          <ErrorMessage component=\"span\" name=\"name\" />\n        </label>\n\n        <label>\n          Email\n          <Field name=\"email\" type=\"text\" />\n          <ErrorMessage component=\"span\" name=\"email\" />\n        </label>\n\n        <label>\n          Password\n          <Field type=\"password\" name=\"password\" />\n          <ErrorMessage component=\"span\" name=\"password\" />\n        </label>\n\n        <button variant=\"outlined\" type=\"submit\">\n          Save\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n// import { Helmet } from 'react-helmet';\n\nconst Register = () => {\n  return (\n    <div>\n      {/* <Helmet> */}\n      <title>Registration</title>\n      {/* </Helmet> */}\n      <RegisterForm />\n    </div>\n  );\n};\nexport default Register;\n"],"names":["FormikSchema","Yup","shape","name","required","email","nullable","password","min","max","RegisterForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","console","log","register","type","pattern","component","variant"],"sourceRoot":""}