{"version":3,"file":"static/js/395.a3091a81.chunk.js","mappings":"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","sources":["components/pages/contacts.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/filter.jsx","components/СontactsList/ContactList.styled.jsx","components/СontactsList/ContactListItem .jsx","components/СontactsList/СontactsList.jsx","components/pages/Сontacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 300px;\n  width: 100%;\n  border-radius: 20px;\n  margin: 0 auto;\n  margin-top: 40px;\n\n  background-color: rgb(141, 179, 157);\n  box-shadow: -15px -15px 2px -5px rgba(123, 51, 90, 0.5),\n    -15px 15px 2px -5px rgba(60, 74, 123, 0.5),\n    15px -15px 2px -5px rgba(255, 0, 0, 0.5),\n    15px 15px 2px -5px rgba(60, 123, 68, 0.5);\n`;\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const Btn = styled.button`\n  text-align: center;\n  display: flex;\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  padding: 5px;\n  font-size: 16px;\n  text-decoration: none;\n  margin: 7px;\n  color: white;\n  background: #7ca78c;\n  box-shadow: rgb(0 0 0 / 64%) 10px 10px 5px 0px;\n  transition: 0.3s;\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n  &:hover {\n    background: #8ebe9f;\n    box-shadow: rgb(0 0 0 / 64%) 10px 10px 5px 0px;\n    transition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n    transform: scale(1.3);\n  }\n`;\nexport const Text = styled.p`\n  color: red;\n  margin-bottom: 20px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 250px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  max-width: 300px;\n  box-sizing: border-box;\n  padding: 10px;\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  box-shadow: inset 0 2px 10px 1px rgba(0, 0, 0, 0.189),\n    inset 0 0 0 60px rgba(0, 0, 0, 0.189), 0 1px rgba(46, 186, 104, 0.08);\n  transition: 0.5s linear;\n  &:focus,\n  &:hover {\n    outline: none;\n    box-shadow: inset 0 1px 3px 1px rgba(0, 0, 0, 0.5),\n      inset 0 0 0 60px rgba(0, 0, 0, 0), 0 1px rgba(133, 23, 23, 0.08);\n  }\n`;\n\nexport const Btn = styled.button`\n  text-align: center;\n  display: flex;\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  padding: 5px;\n  font-size: 16px;\n  text-decoration: none;\n  margin: 7px;\n  color: white;\n  background: #7ca78c;\n  box-shadow: rgb(0 0 0 / 64%) 10px 10px 5px 0px;\n  transition: 0.3s;\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n  &:hover {\n    background: #8ebe9f;\n    box-shadow: rgb(0 0 0 / 64%) 10px 10px 5px 0px;\n    transition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n    transform: scale(1.3);\n  }\n`;\n","import shortid from 'shortid';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport React, { useState } from 'react';\nimport { Form, Btn, Input, Label } from './ContactForm.styled';\n\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { addContact } from 'redux/contacts/operations';\nimport * as selectors from '../../redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectors.selectContacts);\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newContact = {\n      id: shortid(),\n      name,\n      phone,\n    };\n    if (\n      contacts.find(contact => contact.name === newContact.name) ||\n      contacts.find(contact => contact.phone === newContact.phone)\n    ) {\n      return Notify.failure(\n        `${newContact.name} ${newContact.phone} is already in contacts.\n        Please choose other name or phone.`,\n        {\n          position: 'center-center',\n          timeout: 1500,\n        }\n      );\n    }\n\n    dispatch(addContact(newContact));\n    setName('');\n    setPhone('');\n  };\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"phone\"\n            value={phone}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n          />\n        </Label>\n      </div>\n      <div>\n        <Btn type=\"submit\">\n          <BsFillPersonPlusFill />\n        </Btn>\n      </div>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  /* max-width: 300px; */\n  box-sizing: border-box;\n  padding: 10px;\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  box-shadow: inset 0 2px 10px 1px rgba(0, 0, 0, 0.189),\n    inset 0 0 0 60px rgba(0, 0, 0, 0.189), 0 1px rgba(46, 186, 104, 0.08);\n  transition: 0.5s linear;\n  &:focus,\n  &:hover {\n    outline: none;\n    box-shadow: inset 0 1px 3px 1px rgba(0, 0, 0, 0.5),\n      inset 0 0 0 60px rgba(0, 0, 0, 0), 0 1px rgba(133, 23, 23, 0.08);\n  }\n`;\n","import React from 'react';\nimport { Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { selectFilterValue } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  const handleFilter = evt => dispatch(setFilter(evt.target.value));\n\n  return (\n    <div>\n      <label>\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleFilter}\n        />\n      </label>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n  width: 100%;\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 0 10px;\n  margin: 5px;\n`;\nexport const Text = styled.p`\n  transition: 0.3s;\n\n  &:hover {\n    transition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n    transform: scale(1.1);\n  }\n`;\n\nexport const Btn = styled.button`\n  text-align: center;\n  display: flex;\n\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  padding: 4px;\n  font-size: 16px;\n  text-decoration: none;\n  margin: 4px;\n  color: white;\n\n  background: #7ca78c;\n  box-shadow: rgb(0 0 0 / 64%) 10px 10px 5px 0px;\n  transition: 0.3s;\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n  &:hover {\n    background: #8ebe9f;\n    box-shadow: rgb(0 0 0 / 64%) 10px 10px 5px 0px;\n    transition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n    transform: scale(1.3);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { removeContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { Item, Text, Btn } from './ContactList.styled';\nimport { BsFillPersonXFill } from 'react-icons/bs';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = contactId => {\n    dispatch(removeContact(contactId));\n  };\n  return (\n    <Item>\n      <Text>\n        {contact.name}: <span> {contact.number}</span>\n      </Text>\n      <Btn type=\"button\" onClick={() => handleDelete(contact.id)}>\n        <BsFillPersonXFill />\n      </Btn>\n    </Item>\n  );\n};\nContactListItem.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import React from 'react';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { ContactListItem } from './ContactListItem ';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <ContactListItem key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Container, Text, Title } from './contacts.styled';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/filter';\nimport { ContactList } from 'components/СontactsList/СontactsList';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      {contacts.length > 0 ? (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <Text>No any contacts in phonebook</Text>\n      )}\n\n      {isLoading && !error && <b>Request in progress...</b>}\n    </Container>\n  );\n};\nexport default Contacts;\n"],"names":["Container","styled","Title","Text","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","Form","Label","Input","Btn","ContactForm","dispatch","useDispatch","useSelector","selectors","useState","setName","phone","setPhone","handleChange","evt","currentTarget","value","onSubmit","preventDefault","newContact","id","shortid","find","contact","Notify","position","timeout","addContact","type","pattern","title","required","onChange","Filter","setFilter","target","List","Item","ContactListItem","number","onClick","contactId","removeContact","prototype","PropTypes","ContactList","visibleContacts","map","useEffect","fetchContacts","length"],"sourceRoot":""}